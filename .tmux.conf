############################
##### GENERAL SETTINGS #####
############################

# set terminal type
set -g default-terminal "screen-256color"

# long scrollback buffer
set -g history-limit 100000

# listen for activity on all windows
set -g bell-action any

# xterm-style function key sequences
setw -g xterm-keys on

# control automatic window renaming
setw -g automatic-rename on

# pane indexes start from 1, not 0
set -g base-index 1

# auto renumber window on close
setw -g renumber-windows on

setw -g aggressive-resize on

# focus events enabled for terminals that support them
set -g focus-events on


###########################
##### KEYBOARD CONFIG #####
###########################

# C-a instead of C-b
unbind-key C-b
set -g prefix C-a
set -g prefix2 C-F1		# Super_L is mapped to emit this combination

# press ; to issue command
bind-key \; command-prompt

# fast Esc
set -s escape-time 10

# send the prefix to client inside window
bind-key C-a send-prefix

# disable repeat time
set -g repeat-time 0

# new pane/window with current directory
bind-key c new-window -c '#{pane_current_path}'
bind-key C new-window -a -c '#{pane_current_path}'
bind-key -n M-h new-window -c '#{pane_current_path}'
bind-key -n M-H new-window -a -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'
bind-key - split-window -v -c '#{pane_current_path}'

bind-key r rotate-window

# switch panes with alt + arrows
bind-key -n M-Up    if-shell -F "#{?window_zoomed_flag,0,#{s/1/0/:window_panes}}" "select-pane -U" "send-keys 'M-Up'"
bind-key -n M-Down  if-shell -F "#{?window_zoomed_flag,0,#{s/1/0/:window_panes}}" "select-pane -D" "send-keys 'M-Down'"
bind-key -n M-Left  if-shell -F "#{?window_zoomed_flag,0,#{s/1/0/:window_panes}}" "select-pane -L" "send-keys 'M-Left'"
bind-key -n M-Right if-shell -F "#{?window_zoomed_flag,0,#{s/1/0/:window_panes}}" "select-pane -R" "send-keys 'M-Right'"

# select last pane with alt + f
bind-key -n M-f     select-pane -l

# split window with alt + shift + arrows
bind-key -n M-S-Up    split-window -vb -c '#{pane_current_path}'
bind-key -n M-S-Down  split-window -v -c '#{pane_current_path}'
bind-key -n M-S-Left  split-window -hb -c '#{pane_current_path}'
bind-key -n M-S-Right split-window -h -c '#{pane_current_path}'

# switch windows with alt + j/k or q/w
bind-key -n M-j       previous-window
bind-key -n M-k       next-window
bind-key -n M-q       previous-window
bind-key -n M-w       next-window

# mark pane with alt + m
bind-key -n M-m select-pane -m

# move marked pane to current window with alt + p/P
bind-key -n M-p join-pane -h
bind-key -n M-P join-pane -v

# select window with alt + number
bind-key -n M-1 select-window -t :=1
bind-key -n M-2 select-window -t :=2
bind-key -n M-3 select-window -t :=3
bind-key -n M-4 select-window -t :=4
bind-key -n M-5 select-window -t :=5
bind-key -n M-6 select-window -t :=6
bind-key -n M-7 select-window -t :=7
bind-key -n M-8 select-window -t :=8
bind-key -n M-9 select-window -t :=9

# zoom pane with alt + 0
bind-key -n M-0 resize-pane -Z

# integrate with system clipboard
bind-key -t vi-copy y copy-pipe "xsel -ipb"
bind-key -n C-v run "xsel -bo | tmux load-buffer - ; tmux paste-buffer"


########################
##### MOUSE CONFIG #####
########################

set -gq mouse on

bind-key -n WheelUpPane \
	if-shell -Ft= "#{?pane_active,0,1}" "select-pane -t=" \; \
	if-shell -Ft= "#{?pane_in_mode,1,#{mouse_button_flag}}" \
		"send-keys ^y; send-keys ^y; send-keys ^y" \
		"if-shell -Ft= '#{alternate_on}' \
			'send-keys Up Up Up' \
			'copy-mode -e'"

bind-key -n WheelDownPane \
	if-shell -Ft= "#{?pane_active,0,1}" "select-pane -t=" \; \
	if-shell -Ft= "#{?pane_in_mode,1,#{mouse_button_flag}}" \
		"send-keys ^e; send-keys ^e; send-keys ^e" \
		"if-shell -Ft= '#{alternate_on}' \
			'send-keys Down Down Down' \
			''"

# paste with middle click
bind-key -n MouseDown2Pane run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

# drag & drop windows on status line by mouse
bind-key -n MouseDrag1Status swap-window -t=

# new window by right click on status line
bind-key -n MouseDown3Status new-window -a -t= -c '#{pane_current_path}'

# new window in background by middle click on status line
bind-key -n MouseDown2Status new-window -ad -t= -c '#{pane_current_path}'

# scroll over status line to switch layout
bind-key -n WheelDownStatus next-layout
bind-key -n WheelUpStatus previous-layout

# don't scroll to bottom after mouse select
bind-key -t vi-copy MouseDragEnd1Pane copy-selection -x

# old mouse handling (tmux 2.0 and before)
set -gq mode-mouse on
set -gq mouse-resize-pane on
set -gq mouse-select-pane on
set -gq mouse-select-window on


###############################
##### STATUS LINE OPTIONS #####
###############################

set -g set-titles on
set -g set-titles-string "[tmux] #T"
setw -g window-status-format '#I:#W#F'
setw -g window-status-current-format '#{?client_prefix,#[bg=red],#{?pane_in_mode,#[bg=yellow]#[fg=black],#[bg=blue]}} #I:#W#F '
set -g window-status-separator ' '

set -g status-left '[#S] '
set -g status-left-length 20

set -g status-right ' #{pane_pid}: #T '

# status bar messages display time
set -g display-time 3000

# refresh status line frequency (in sec)
set -g status-interval 2


##################
##### STYLES #####
##################

set -g pane-border-style            fg=white,bg=white
set -g pane-active-border-style     fg=blue,bg=blue
set -g status-style                 fg=black,bg=white
set -g status-right-style           fg=white,bg=blue,bold
setw -g window-status-style         default,bold
setw -g window-status-current-style fg=white,bg=blue,bold
set -g message-style                fg=white,bg=blue,bright

